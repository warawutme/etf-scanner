import streamlit as st
import pandas as pd
from breakout_scanner import calculate_technical_indicators, generate_signals
import yfinance as yf

st.set_page_config(page_title="Breakout Auto ETF Scanner", layout="wide")

st.markdown("## üìà Breakout Auto ETF Scanner (YFinance Edition)")
st.caption("Powered by ‡∏°‡∏≤‡∏ö‡∏≠‡∏¢ üêÉüî•")

tickers = ['YINN', 'FNGU', 'SOXL', 'FXI', 'EURL', 'TNA', 'GDXU']  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î ETF ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö

selected_etf = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ETF", tickers)

# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å yfinance
try:
    df = yf.download(selected_etf, period='3mo', interval='1d', progress=False)
    df = df[['Open', 'High', 'Low', 'Close', 'Volume']].dropna()
    df.reset_index(inplace=True)
    df.columns.name = None
    df['Date'] = pd.to_datetime(df['Date'])
except Exception as e:
    st.error(f"‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
    st.stop()

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏¥‡∏ô‡∏î‡∏¥‡πÄ‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå
try:
    df = calculate_technical_indicators(df)
    df = generate_signals(df)
except Exception as e:
    st.error(f"‚ùå ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏¥‡∏ô‡∏î‡∏¥‡πÄ‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
    st.stop()

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
latest = df.iloc[-1:]

st.markdown(f"### üß† ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: `{selected_etf}`")
st.markdown(f"- üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: `{latest['Date'].iloc[0].date()}`")
st.markdown(f"- üìä ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì: **{latest['Signal'].values[0]}**")
st.markdown(f"- RSI: `{latest['Rsi'].values[0]:.2f}`")
st.markdown(f"- MACD: `{latest['Macd'].values[0]:.2f}`")
st.markdown(f"- EMA20: `{latest['Ema20'].values[0]:.2f}`")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
with st.expander("üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á"):
    st.dataframe(df.tail(30), use_container_width=True)
