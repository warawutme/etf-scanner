import streamlit as st
import pandas as pd
from breakout_scanner import calculate_technical_indicators, generate_signals

st.set_page_config(page_title="Breakout Auto ETF Scanner (YFinance Edition)", layout="wide")
st.title("üìà Breakout Auto ETF Scanner (YFinance Edition)")
st.caption("Powered by ‡∏°‡∏≤‡∏ö‡∏≠‡∏¢ üêÉüî•")

# List of ETFs to scan
etfs = ['YINN', 'FNGU', 'SOXL', 'FXI', 'EURL', 'TNA', 'GDXU']
selected_etf = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ETF", etfs)

try:
    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏¥‡∏ô‡∏î‡∏¥‡πÄ‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå
    df = calculate_technical_indicators(selected_etf)
    df = generate_signals(df)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    latest = df.tail(1)
    latest_date = latest['Date'].iloc[0].date()

    st.subheader(f"üìä ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {selected_etf}")
    st.markdown(f"- ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: **{latest_date}**")
    st.markdown(f"- ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì: **{latest['Signal'].iloc[0]}**")
    st.markdown(f"- RSI: `{latest['Rsi'].values[0]:.2f}`")
    st.markdown(f"- MACD: `{latest['Macd'].values[0]:.2f}`")
    st.markdown(f"- R:R: `{latest['R:R'].values[0]:.2f}`")

    # ‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏≤‡∏Ñ‡∏≤‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
    st.line_chart(df.set_index("Date")["Close"])

except Exception as e:
    st.error(f"‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
